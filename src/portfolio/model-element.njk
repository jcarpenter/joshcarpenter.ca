---js
{
    title: "Model Element",
    tags: ["ux"],
    publish: false,
    image: "TODO",
    summary: "TODO. Animations were created in Cinema 4D and After Effects.",
    permalink: "/model-element/",
    force_dark_mode: false
}
---

<header class="grid-12">
    <h1 id="title">{{ title }}</h1>
    <div class="intro">
        <p>
            At Google I lead a team that explored a future &#60;model&#62; element for the web. At the time, tools for adding 3D content to websites required JavaScript and were oriented towards more advanced developers. We felt that 3D on the web was becoming important enough to warrant a dedicated element, like &#60;video&#62; and &#60;img&#62;. We envisioned that a &#60;model&#62; element would be easier for most developers to use, and have abilities that JS WebGL-based solutions would not&#8212;from developer tool integration to future-proof UX&#8212;by virtue of being rendered by the browser. You probably wouldn't use a &#60;model&#62; to create rich 3D immersive worlds—that's what WebGL was for—but it would be ideal for presenting media and information; the web's classic bread and butter.
        </p>
        <p>
            I was UX / Product lead of this effort, working with a team of design engineers and developers ^[<a href="https://gordonbrander.com">Gordon Brander</a>, <a href="https://twitter.com/jsantell">Jordan Santell</a>, <a href="https://twitter.com/0xcda7a">Chris Joel</a>, plus contributions from <a href="https://www.syedrezaali.com/">Reza Ali</a> and <a href="https://www.linkedin.com/in/max-rebuschatis-b7963532/">Max Rebuschatis</a>.] to create specifications, build prototypes, and present our ideas to the web community and internal stakeholders. I created the animations on this page to help communicate our concepts. Most were created in Cinema 4D and After Effects.
        </p>
        <p>
            Our efforts ultimately led to <a href="https://modelviewer.dev/">model-viewer</a>, a tool for easily adding interactive 3D models to websites, with support for augmented reality. Model-viewer solves problems for developers today, and helps us learn what a future standardized &#60;model&#62; model element will need to have.
        </p>
    </div>
    <div class="metadata">
        <time>2017/19</time>, <span class="role">Google</span><br>
        Product Management<br>
        Interaction Design<br>
        Visual Design<br>
        Prototyping<br>
    </div>
</header>

{# ----- Furniture: Mobile & Desktop ----- #}

<div class="grid-12 no-row-gap">
    <div class="cols-all lg-mb-large">
        <video playsinline autoplay loop muted>
            <source src="video/ciw-model-furniture-interoperability.webm" type="video/webm; codecs=vp9,opus"></source>
            <source src="video/ciw-model-furniture-interoperability.mp4" type="video/mp4"></source>
        </video>
    </div>
    <div class="cols-left-right-split">
        <p class="caption-clr small-text mb-medium lg-mb-zero">
            Rendering the &#60;model&#62; element with depth, whether on a VR browser, or a flat mobile display. We can imagine the perspective shifting as the user scrolls. Perhaps enabled by a property on the element, akin to `autoplay` on media elements. A property that could be disabled globally in browser preferences, for users who experience feelings of motion sickness from parallax effects.
        </p>
        <p class="body-text">
            The enabling crux of this vision was a <code>&#60;model&#62;</code> element, and new CSS properties. We envisioned these would enable today's web developers to progressively enhance their sites with 3D content, with minimal learning curve. You probably wouldn't use these tools to create rich 3D immersive worlds—that was what low level graphics APIs like WebGL were for—but they would be ideal for presenting media and information; the web's classic bread and butter. As we said on the team, XR computing had enough game engines; we wanted to create the printing press.
        </p>
    </div>
</div>


{# ----- Furniture: AR ----- #}

<div>
    <video playsinline autoplay loop muted>
        <source src="video/ciw-model-furniture-ar.webm" type="video/webm; codecs=vp9,opus"></source>
        <source src="video/ciw-model-furniture-ar.mp4" type="video/mp4"></source>
    </video>
    <p class="caption-clr small-text">Viewing a &#60;model&#62; in mobile AR</p>
</div>


{# ----- Car configurator ----- #}

<div>
    <video playsinline autoplay loop muted>
        <source src="video/ciw-model-carconfig.webm" type="video/webm; codecs=vp9,opus"></source>
        <source src="video/ciw-model-carconfig.mp4" type="video/mp4"></source>
    </video>
    <p class="caption-clr small-text">Moving and panning a model &#60;model&#62; in VR</p>
</div>

{# ----- Model coordinates ----- #}

<div>
    <video playsinline autoplay loop muted>
        <source src="video/ciw-model-coordinates.webm" type="video/webm; codecs=vp9,opus"></source>
        <source src="video/ciw-model-coordinates.mp4" type="video/mp4"></source>
    </video>
    <p class="caption-clr small-text">Exploring &#60;model&#62; coordinates and clipping</p>
</div>

{# ----- C4D rig ----- #}

<div>
    <img src="img/ciw/c4d-rig-ui.png"></img>
    <p class="caption-clr small-text">Example Cinema 4D workflow for these animations</p>
</div>

{# ----- Remix everything ----- #}


<div>
    <video playsinline autoplay loop muted>
        <source src="video/ciw-model-remix-everything.webm" type="video/webm; codecs=vp9,opus"></source>
        <source src="video/ciw-model-remix-everything.mp4" type="video/mp4"></source>
    </video>
    <p class="caption-clr small-text">Playing with the idea of remixable models</p>
</div>

{# ----- News ----- #}

<div class="">
    <video playsinline autoplay loop muted>
        <source src="video/ciw-news.webm" type="video/webm; codecs=vp9,opus"></source>
        <source src="video/ciw-news.mp4" type="video/mp4"></source>
    </video>
    <p class="caption-clr small-text">Early explorations of responsive design with CSS 3D transforms</p>
</div>
