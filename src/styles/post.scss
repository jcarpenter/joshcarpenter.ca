@use 'mixins-and-functions' as *;

/*
Remove all text utility classes
Set text per-element, at top of post, home, portfolio, project, etc.
Use function to make it clearer what's what
Easy to adapt fonts 

Bring utility classes to headers.
Make utility classes more abstract.

*/


#body section > p {
	--color: var(--body-text);
	@include font-body;
	@include links;
	margin-bottom: 2rem;
}

#body figcaption {
  --color: var(--caption);
  @include font-small;
  @include links($brightnessShift: false);
}

/* 
========================================================
POST-SPECIFIC STYLES
========================================================
*/

article {
	--max-post-width: 50rem;
	margin-bottom: calc(var(--large-margin) + 2rem);
}

// -------------- Header - Shared -------------- //

article header {
	position: relative;
	padding-top: 2rem;
	margin-bottom: 1rem;
}

article h1 {
	--color: var(--accent);
	@include font-large-4;

	max-width: 34ch;
	
	// font-weight: 500;
	// @include baselineShiftTypography($fontSize: 2.5rem, $lineHeight: 3rem);

	// @include medium-screen {
	// 	font-weight: 400;
	// 	@include baselineShiftTypography($fontSize: 2rem, $lineHeight: 3rem);
	// }
}

article header #front-matter #details {
	--color: var(--body-text);
	@include font-small;
	@include links($hideUnderlineUntilHover: true, $brightnessShift: false);
	flex: 0 0 content;
	white-space: nowrap;

	> * {
		display: block;
	}

	.author {
		font-weight: 500;
	}

	time {
		opacity: 0.8;
	}

	#tags {
		margin: 0;
		padding: 0;
		display: flex;
		color: onBackground(0.5);
		margin-right: 0.5rem;
		margin-bottom: 0.5rem;

		li {
			list-style: none;
			display: inline;
			flex: 0 0 auto;
			margin: 0;
			padding: 0;
		}

		li + li::before {
			content: ', ';
		}
	}
}

// -------------- Header - Large -------------- //

main.large {
	header {
		margin-bottom: var(--large-margin);
	}

	h1 {
		margin-bottom: 2rem;
	}

	#front-matter {
		padding-bottom: 3rem;
		border-bottom: 2px solid accent(0.8);
	}

	#front-matter .wrapper {
		max-width: var(--max-post-width);
	}

	#front-matter #summary {
		--color: var(--body-text);
		@include font-large-2;
		position: relative;
		margin-right: 1rem;
		margin-bottom: 2rem;
	
		@include small-screen {
			&::before {
				content: '';
				min-width: 2px;
				max-width: 0.2em;
				position: absolute;
				height: 100%;
				border-radius: 2px;
				box-sizing: content-box;
				top: 0.5rem;
				// Reduce height so this visible box only extends as
				// far as the baseline of the last line. If we don't
				// do this, it extends to descender and bottom padding.
				height: calc(100% - 1rem);
	
				@include light {
					background-color: accent(1);
				}
				@include dark {
					background-color: accent(1);
				}
			}

			p {
				padding-left: 1.5rem;
			}
		}

		p {
			// font-weight: 500;
			// line-height: 2rem;
			max-width: 52ch;
			padding-top: 0 !important;
			margin: 0;
		}
	}

	#front-matter #details {
		display: grid;
		grid-template-columns: repeat(2, fit-content(2ch));
		column-gap: 1.5rem;

		#photo {
			grid-row-end: span 2;
			border-radius: 50%;
			width: 3.5rem;
			height: 3.5rem;
			overflow: hidden;
			img {
				background-color: accent(0.1);
			}
		}
	}
}

// -------------- Header - Compact -------------- //

main.compact {
	h1 {
		margin-bottom: 2rem;
	}

	#front-matter {
		margin: 0;
		padding: 1.5rem 0 2rem;

		@include small-screen {
			padding-bottom: 3rem;
		}

		border-top-width: 2px;
		border-top-style: solid;
		border-top-color: accent(1);
	}

	#front-matter .wrapper {
		max-width: var(--max-post-width);
		display: flex;
		flex-wrap: wrap;
		overflow: hidden;
		row-gap: 1rem;
		column-gap: 4rem;
		align-items: start;
	}

	#front-matter #details {
		--color: var(--body-text);
		@include font-small;
		flex: 0 0 content;
		white-space: nowrap;

		> * {
			display: block;
		}

		// #tags {
		// 	margin: 0;
		// 	padding: 0;
		// 	display: flex;
		// 	color: onBackground(0.5);
		// 	margin-right: 0.5rem;
		// 	margin-bottom: 0.5rem;

		// 	li {
		// 		list-style: none;
		// 		display: inline;
		// 		flex: 0 0 auto;
		// 		margin: 0;
		// 		padding: 0;
		// 	}

		// 	li + li::before {
		// 		content: ", ";
		// 	}
		// }
	}

	#front-matter #summary {
		flex: 1 0 40ex;
		margin: 0;
		// padding: 0;

		p {
			--color: var(--body-text);
			@include font-small;
			margin-bottom: 0rem;
			font-weight: 500;
		}
	}
}

// -------------- Body -------------- //

// Consistent margin-bottom for top-level
// children (sections and divs). More margin
// for .large posts.
main.large #body > * {
	margin-bottom: calc(var(--large-margin) + 2rem) !important;
}

main.large #body > .splash,
main.large #body > figure:first-child {
	margin-bottom: var(--large-margin) !important;

}

main.compact #body > * {
	margin-bottom: calc(var(--large-margin) + 1rem) !important;
}

main.compact #body > .splash,
main.compact #body > figure:first-child {
	margin-bottom: var(--small-margin) !important;
}

// Borders on top of top-level sections
#body > section {
	border-top-width: 2px;
	border-top-style: solid;
	border-top-color: sectionDivider(0.6);
	transition: border-color 0.2s;
}

#body section:focus-visible { 
	outline: none; 
}

// Consistent max-width on children of top-level sections
#body > section > * {
	max-width: var(--max-post-width);
}

// For first section of the #body:
// - Don't apply top border to first section
// - Hide h2 if it has .hide class
#body > section:first-of-type {
	border-top: none;
	h2.hide {
		display: none;
	}
}


/* -------------- H2 -------------- */

h2 {
	--color: var(--accent);
	padding-top: 2rem;
	margin-bottom: 2rem;
	margin-top: 0;
	font-weight: 600 !important; 

	// Hide link underlines
	a {
		color: inherit;
		text-decoration-color: transparent;
	}

	a:hover {
		color: inherit;
		text-decoration-color: transparent;
	}
}

// Larger typography on .large articles
// Smaller on .compact
main.large h2 {
	@include font-large-2;
}

main.compact h2 {
	@include font-large-1;
}

// Add ## before h2:
// - Larger screens only (no room on smaller displays)
@include small-screen {
	h2 a {
		position: relative;

		&::before {
			content: '##';
			font-weight: 500;
			font-size: 0.9em;
			color: accent(0.4);
			left: -0.5rem;
			transform: translateX(-100%);
			position: absolute;
			transition: color 0.15s;
		}

		&:hover::before {
			color: accent(0.8);
		}
	}
}

/* -------------- H3 -------------- */

h3 {
	--color: var(--body-text);
	@include font-large-1;
	margin-bottom: 2rem;

	// Hide link underlines
	a {
		color: inherit;
		text-decoration-color: transparent;
	}

	// Override default a hover styles.
	// We don't want underline or color change.
	a:hover {
		color: inherit;
		text-decoration-color: transparent;
	}
}

main.large h3 {
	@include font-large-1;
	font-weight: 600;
}

main.compact h3 {
	@include font-body;
	font-weight: 500;
}

// In main.large h3's:
// - Top padding
// - Brighten
// - Add ### prefix (on >large screens)
main.large h3 {
		
	@include large-screen {
		position: relative;
	
		&::before {
			content: '###';
			font-weight: 300;
			font-size: 0.9em;
			color: onBackground(0.3);
			left: -0.5rem;
			transform: translateX(-100%);
			position: absolute;
			transition: color 0.15s;
		}
	
		&:hover::before {
			color: onBackground(1);
		}
	}
}


/* -------------- Aside -------------- */

.caution {
	border-radius: var(--media-border-radius);
	border-left: 0.2rem solid caution(1);
	padding: 2rem 2rem;

	@include light {
		background-color: caution(0.1);
	}
	
	@include dark {
		background-color: caution(0.1);
	}
}

.caution > *:first-child::before {
	content: 'Caution';
	@include monoFont;
	border-radius: 0.2em;
	// Push vertical alignment up a few px.
	// Code text is bit smaller than surrounding,
	// So we need to vertically center it.
	line-height: 0;
	vertical-align: 0.05em;
	padding: 0.075em 0.25em 0.15em;
	font-size: 0.85em;
	margin-right: 0.5em;
	
	@include light {
		color: white;
		background-color: caution(1);
	}
	
	@include dark {
		filter: brightness(0.8);
		color: foreground(1);
		background-color: caution(0.6);
	}
}

.caution > * {
	@include baselineShiftTypography($fontSize: 1.33rem, $lineHeight: 2rem);
	display: inline;

	@include light { 
		color: caution(1) !important;
	}

	@include dark {
		color: caution(0.8) !important;
		filter: brightness(1.4);
	}
}

.caution p > a {
	color: caution(1) !important;

}
