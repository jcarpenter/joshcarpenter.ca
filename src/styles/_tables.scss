@use "mixins-and-functions" as *;

/* 
========================================================
TABLES
========================================================
*/

// Note: I have to use padding instead of margin to add space to bottom of tables, because of Firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1492315. It causes margin values to apply to table cels (instead of the table element), if the table is a child of display: grid. Using padding in turn means I have to apply background color, border-radius (etc) to cels, instead of the table itself.

table {
    --tableBorderRadius: 0.3rem;
    --tableOuterBorderThickness: 1px;
    --tableOuterBorderColor: #{onBackground(0.3)};
    --tableInnerBorderColor: #{onBackground(0.15)};
    
    @include dark {
        --tableOuterBorderColor: #{accent(0.4)};
        --tableInnerBorderColor: #{accent(0.2)};
    }

    th { 
        @include dotBackground(0.25, 0.05);
    }

    width: 100%;
    border-spacing: 0;
    text-align: left;
    margin-top: 1rem;
    margin-bottom: 2rem;

    th, td {
        @include baselineShiftTypography(
            $fontSize: fontSize(0.9),
            $lineHeight: 2rem
        );
        padding-left: 0.5rem;
        padding-right: 0.5rem;
        margin-bottom: 1rem;
    }

    th:first-child, td:first-child {
        // Bit more padding for far-left column
        padding-left: 0.75rem;
    }
}

/* -------------- Head -------------- */

th { 
    @include dotBackground(0.25, 0.05);
}

  
// Alternating row colors
// table tr:nth-child(2n) td {
//     background: var(--tableBackgroundColor);
// }
  

/* -------------- Borders -------------- */

// We use box-shadow instead of borders for top and bottom
// borders, to preserve vertical grid rhythm. Box-shadow
// does not effect table cel height; borders do. Even if 
// we use box-sizing: border-box. It is ignored for tables.

/* Each row */
table td {
    box-shadow: 0 1px 0 0 var(--tableInnerBorderColor);
}

/* First row: Add a second box-shadow for top border */
table *:first-child tr:first-child > * {
    box-shadow: 0 calc(var(--tableOuterBorderThickness) * -1) 0 0 var(--tableOuterBorderColor), 
        0 1px 0 0 var(--tableInnerBorderColor);
}

/* Last row: Make the box-shadow use the outer color */
table *:last-child tr:last-child td {
    box-shadow: 0 var(--tableOuterBorderThickness) 0 0 var(--tableOuterBorderColor);
}

/* Left side */
table th:first-of-type, 
table td:first-of-type {
    border-left: var(--tableOuterBorderThickness) solid var(--tableOuterBorderColor);
}

/* Right side */
table th:last-of-type, 
table td:last-of-type {
    border-right: var(--tableOuterBorderThickness) solid var(--tableOuterBorderColor);
}


/* -------------- Round corners -------------- */
/* Note: Normally would apply to table element, but can't, because that won't work with padding. */

/* Top left */
table *:first-child tr:first-child > *:first-child {    
    border-top-left-radius: var(--tableBorderRadius);
}

/* Top right */
table *:first-child tr:first-child > *:last-child {
    border-top-right-radius: var(--tableBorderRadius);
}

/* Bottom left */
table *:last-child tr:last-child > *:first-child {
    border-bottom-left-radius: var(--tableBorderRadius);
}

/* Bottom right */
table *:last-child tr:last-child > *:last-child {
    border-bottom-right-radius: var(--tableBorderRadius);
}
