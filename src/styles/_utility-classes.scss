@use 'mixins-and-functions' as *;

/*
========================================================
UTILITY CLASSES
========================================================
*/

// NOTE, 1/21/2022: Commented-out classes are unused in the
// project. Am keeping them for now, but could delete in future.

// -------------- Wrapper -------------- //

.content-wrapper {
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.standard-width {
  @include standardWidth;
}

// -------------- Colors -------------- //

// Captions

.caption-clr {
  font-weight: 400;
  color: caption(1);

  a {
    color: caption(1);
    text-decoration-color: caption(0.6);

    &:hover {
      color: caption(1);
      text-decoration-color: caption(0.8);
      // Make links stand out a bit from the surrounding text
      @include light {
        filter: brightness(0.8);
      }
      @include dark {
        filter: brightness(1.1);
      }
    }

    &:active {
      outline: none;
      background-color: caption(0.1);
    }
  }
}

// -------------- Typography -------------- //

// Large text

.large-text p,
p.large-text {
  @include baselineShiftTypography($fontSize: 1.33rem, $lineHeight: 2rem);

  @include medium-screen {
    @include baselineShiftTypography($fontSize: 1.6rem, $lineHeight: 2.5rem);
  }

  font-weight: 400;

  &:last-of-type {
    margin-bottom: 0rem;
  }

  // Links
  a {
    text-decoration-line: underline;
    text-underline-offset: 0.08em;
    text-decoration-thickness: 2px;
  }
}

// Body text

.body-text {
  @include baselineShiftTypography($fontSize: 1.333rem, $lineHeight: 2rem);

  margin-bottom: 1rem;
  font-variant-numeric: oldstyle-nums;
  font-weight: 400;

  a {
    text-decoration-line: underline;
    text-underline-offset: 0.1em;
  }
}

p.body-text:last-of-type,
.body-text p:last-of-type {
  // margin-bottom: 0;
}

// Small text

.small-text {
  @include baselineShiftTypography($fontSize: 1.2rem, $lineHeight: 1.75rem, $paddingTop: 0rem);

  margin-bottom: 0;

  a {
    text-decoration-line: underline;
    text-underline-offset: 0.1em;
  }
}

// Smaller text

.smaller-text {
  @include baselineShiftTypography($fontSize: 1rem, $lineHeight: 1.5rem, $paddingTop: 0rem);

  margin-bottom: 0;

  a {
    text-decoration-line: underline;
    text-underline-offset: 0.15em;
  }
}

// -------------- Grid -------------- //

// Grid - 12 columns

.grid-12 {
  display: grid !important;
  overflow: hidden;

  grid-auto-flow: column;
  grid-template-columns: repeat(4, 1fr);
  gap: 1rem;

  @include medium-screen {
    grid-template-columns: repeat(12, 1fr);
    gap: 2rem;
  }
}

// Grid - 2 columns

.grid-2 {
  display: grid !important;
  overflow: visible;
  // overflow: hidden;

  grid-template-columns: 1fr;
  gap: 1rem;

  @include medium-screen {
    grid-template-columns: repeat(2, 1fr);
    gap: 2rem;
  }
}

// Column distribution

.cols-left-right-split {
  display: contents;

  > *:first-child,
  > *:not(:first-child) {
    grid-column: 1 / -1;
  }

  @include medium-screen {
    > *:first-child,
    > *:not(:first-child) {
      grid-column: 1 / span 8;
    }
  }

  @include large-screen {
    > *:first-child {
      grid-column: 9 / -1;
    }
    > *:not(:first-child) {
      grid-column: 1 / span 7;
    }
  }
}

// .cols-right-left-split {
//   display: contents;

//   > *:first-child,
//   > *:not(:first-child) { grid-column: 1 / -1; }

//   @include medium-screen {
//     > *:first-child,
//     > *:not(:first-child) { grid-column: 1 / span 8; }
//   }

//   @include large-screen {
//     > *:first-child { grid-column: 1 / span 3; }
//     > *:not(:first-child) { grid-column: 4 / -1; }
//   }
// }

.cols-left-half {
  grid-column: 1 / -1;
  @include medium-screen {
    grid-column: 1 / span 8;
  }
  @include large-screen {
    grid-column: 1 / span 7;
  }
}

.cols-all {
  grid-column: 1/-1;
}

// -------------- Gaps -------------- //

.no-col-gap {
  column-gap: 0 !important;
}
.no-row-gap {
  row-gap: 0 !important;
}

// -------------- Object-fit -------------- //

.of-cover,
.of-contain {
  width: 100%;
  height: 100%;
}

.of-cover {
  object-fit: cover !important;
}
.of-contain {
  object-fit: contain !important;
}

// -------------- Aspect ratio -------------- //

.aspect-ratio-5-4,
.aspect-ratio-3-2,
.aspect-ratio-16-9,
.aspect-ratio-16-10,
.aspect-ratio-185-1 {
  overflow: hidden;
}

.aspect-ratio-5-4 {
  aspect-ratio: 3 / 2;
} // 1.25
.aspect-ratio-3-2 {
  aspect-ratio: 3 / 2;
} // 1.5
.aspect-ratio-16-10 {
  aspect-ratio: 16 / 10;
} // 1.6
.aspect-ratio-16-9 {
  aspect-ratio: 16 / 9;
} // 1.778
.aspect-ratio-185-1 {
  aspect-ratio: 1.85 / 1;
} // 1.85

// -------------- Padding -------------- //

// .p-zero { padding: 0 !important; }
.p-small {
  padding: var(--small-pad) !important;
}
// .p-medium { padding: var(--medium-pad) !important; }
.p-large {
  padding: var(--large-pad) !important;
}

@include small-screen {
  // .sm-p-zero { padding: 0 !important; }
  .sm-p-small {
    padding: var(--small-pad) !important;
  }
  // .sm-p-medium { padding: var(--medium-pad) !important; }
  // .sm-p-large { padding: var(--large-pad) !important; }
}

@include medium-screen {
  // .md-p-zero { padding: 0 !important; }
  // .md-p-small { padding: var(--small-pad) !important; }
  // .md-p-medium { padding: var(--medium-pad) !important; }
  .md-p-large {
    padding: var(--large-pad) !important;
  }
}

@include large-screen {
  // .lg-p-zero { padding: 0 !important; }
  // .lg-p-small { padding: var(--small-pad) !important; }
  // .lg-p-medium { padding: var(--medium-pad) !important; }
  // .lg-p-large { padding: var(--large-pad) !important; }
}

// -------------- Margin -------------- //

.mb-zero {
  margin-bottom: 0 !important;
}
.mb-small {
  margin-bottom: var(--small-margin) !important;
}
.mb-medium {
  margin-bottom: var(--medium-margin) !important;
}
.mb-large {
  margin-bottom: var(--large-margin) !important;
}

@include small-screen {
  // .sm-mb-zero { margin-bottom: 0 !important; }
  // .sm-mb-small { margin-bottom: var(--small-margin) !important; }
  // .sm-mb-medium { margin-bottom: var(--medium-margin) !important; }
  // .sm-mb-large { margin-bottom: var(--large-margin) !important; }
}

@include medium-screen {
  .md-mb-zero {
    margin-bottom: 0 !important;
  }
  // .md-mb-small { margin-bottom: var(--small-margin) !important; }
  // .md-mb-medium { margin-bottom: var(--medium-margin) !important; }
  // .md-mb-large { margin-bottom: var(--large-margin) !important; }
}

@include large-screen {
  .lg-mb-zero {
    margin-bottom: 0 !important;
  }
  // .lg-mb-small { margin-bottom: var(--small-margin) !important; }
  // .lg-mb-medium { margin-bottom: var(--medium-margin) !important; }
  .lg-mb-large {
    margin-bottom: var(--large-margin) !important;
  }
}

/* -------------- Hanging punctuation -------------- */

// Applied manually in the build process if the first character is a quote.
.hanging-punctuation {
  text-indent: -0.3em;
}

// Prevent children indenting by reseting to zero.
.hanging-punctuation * {
  text-indent: 0;
}

/* -------------- Hidden -------------- */

// Hide visibly only; content is still available to screen readers. Example use case: "Skip to content" at the top of a page, enabling screen readers to skip navigation (etc) to content.
// Per: https://webaim.org/techniques/css/invisiblecontent/
.visibility-hidden {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px !important;
  width: 1px !important;
  margin: -1px !important;
  overflow: hidden;
  padding: 0 !important;
  position: absolute !important;
}

// Hide both visibly, and from screen readers
[aria-hidden='true'] {
  // display: none;
  visibility: hidden;
}
