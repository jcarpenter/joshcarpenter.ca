@use 'mixins-and-functions' as *;




/* 
========================================================
FOOTNOTES: LINKS INSIDE CONTENT
========================================================
*/

/* -------------- nbsp before the visible link -------------- */

// We precede the sup/link with an nbsp in a span
// to prevent footnote links from being orphaned on a
// new line from the text that precedes them.

.fn-gap {
    // visibility: hidden;
    width: 0.2em;
    display: inline-block;
}

/* -------------- Wrapping <sup> -------------- */

sup.fn {
    position: relative;
    // vertical-align: baseline;
    bottom: -0.3em;
    line-height: 0;
    // font-size: 1em;
    // top: initial;
}

/* -------------- Link -------------- */

.fn > a {
    font-size: 1em;
    padding: 0.15em 0.25em;
    @include medium-screen {
        font-size: 0.9em;
        padding: 0.15em 0.2em;
    }
    text-decoration-line: none !important;
    line-height: 0;
    border-radius: 0.25em;

    font-weight: 600;
    @include medium-screen {
        font-weight: inherit;
    }
    
    @include light {
        color: onBackground(0.6);
        background-color: onBackground(0.1);
        &:hover {
            background-color: onBackground(0.2);
        }
    }
    
    @include dark {
        color: onBackground(0.8);
        background-color: onBackground(0.2);
        &:hover {
            color: onBackground(1);
            background-color: onBackground(0.35);
        }
    }
}

// Touch: Make target slightly larger
@media (hover: none) {
    .fn > a {
        // padding: 0em 0.1em;
        // padding: 0.3em 0.35em 0.2em;
    }
}

// Desktop: Make target slightly smaller
@media (hover) {
    .fn > a {
        // padding: 0;
        // padding: 0.3em 0.25em 0.2em;
    }
}

// Links inside the footnote
.fn > a:focus {
    @include outline-thin;
    outline-offset: 0.2rem;
}

.fn > a:focus,
.fn > a:hover {
    color: onBackground(1);
}

// /* -------------- Wrapping <sup> -------------- */

// sup.fn {
//     position: relative;
//     vertical-align: baseline;
//     font-size: 1em;
//     top: initial;
//     bottom: 0.1em;
// }

// /* -------------- Link -------------- */

// .fn > a {
//     font-size: 0.8em;
//     color: onBackground(calc(var(--base-text-alpha) - 0.2));
//     background: none;
//     text-decoration: underline;
//     text-decoration-color: inherit;
//     text-underline-offset: 0.1em;
//     padding: 0;
//     // Push vertical alignment up a few px.
//     // Code text is bit smaller than surrounding,
//     // So we need to vertically center it.
//     line-height: 0;
//     vertical-align: 0.1em;
//     border-radius: 0.03rem;
// }

// // Touch: Make target slightly larger
// @media (hover: none) {
//     .fn > a {
//         // padding: 0em 0.1em;
//         // padding: 0.3em 0.35em 0.2em;
//     }
// }

// // Desktop: Make target slightly smaller
// @media (hover) {
//     .fn > a {
//         padding: 0;
//         // padding: 0.3em 0.25em 0.2em;
//     }
// }

// // Links inside the footnote
// .fn > a:focus {
//     @include outline-thin;
//     outline-offset: 0.2rem;
// }

// .fn > a:focus,
// .fn > a:hover {
//     color: onBackground(1);
//     // background-color: onBackground(0.2);
// }

/* -------------- Inside .large-text -------------- */

.large-text sup.fn > a {
    // color: inherit;
    // opacity: 0.8;
    // vertical-align: 0.4em;
    // text-decoration: none;
}

/* -------------- Inside blockquotes -------------- */

// Counteract any blockquote italics styling
blockquote .fn > a {
    font-style: normal;
    color: inherit;
    // background-color: accent(0.075);
    &:focus,
    &:hover {
        color: inherit;
        // background-color: accent(0.2);
    }
}

blockquote .fn-popup {
    font-style: normal;
}

/* 
========================================================
FOOTNOTES: POPUP OVER LINK
========================================================
*/

.fn-popup {

    --color: var(--on-popup);
    @include font-small;
    @include links($brightnessShift: false);
    a { filter: brightness(1.1) !important; }

    margin-bottom: 0rem;
    white-space: normal;
    padding: 1rem !important;
    background-color: popup();

    code {
        filter: brightness(1.2);
    }
                
    // color: onPopup(0.8);

    // a {
    //     color: onPopup(0.9);
    //     text-decoration-color: onPopup(0.6);

    //     &:hover {
    //         color: onPopup(1);
    //         text-decoration-color: onPopup(0.8);
    //         @include light {
    //             filter: brightness(0.8);
    //         }
    //         @include dark {
    //             filter: brightness(1.1);
    //         }
    //     }

    //     &:active {
    //         outline: none;
    //         background-color: onBackground(0.1);
    //     }

    //     // Make links stand out a bit from the surrounding text
    //     // filter: brightness(1.1);
    // }

    @include dark {
        box-shadow: 0 0 2rem rgba(0, 0, 0, 0.1);
    }
}

// Popup: Desktop and larger touch-based devices
// Appears as a hovering box
@media (hover), (hover: none) and (min-width: 600px) {
    .fn {
        --notch-size: 1rem;
        --popup-distance: -0.75rem;
        --show: 0.05s;
        --hide: 0.05s;
        --delay: 0.1s;
    }

    .fn-popup {
        position: absolute;
        left: 50%;
        z-index: 100;
        width: 24rem;
        visibility: hidden;
        opacity: 0;
        transition: visibility var(--hide), opacity var(--hide);
        transition-delay: var(--delay);
        transition-timing-function: ease-out;
        /* Notch */
        &::before {
            content: '';
            width: var(--notch-size);
            height: var(--notch-size);
            position: absolute;
            transform: rotate(45deg);
            z-index: -1;
            background-color: inherit;
        }
    }

    .fn-popup.above {
        transform: translate(-50%, -100%);
        // Offset by size of notch, then adjust distance with final value
        top: var(--popup-distance);
        /* Notch */
        &::before {
            bottom: 0.05em;
            left: 50%;
            transform: translate(-50%, 50%) rotate(45deg);
        }
    }

    .fn-popup.below {
        transform: translate(-50%, 100%);
        bottom: -0.5em;
        /* Notch */
        &::before {
            top: 0.05em;
            left: 50%;
            transform: translate(-50%, -50%) rotate(45deg);
        }
    }

    .fn:focus-within a[aria-expanded='true'] + .fn-popup,
    .fn:hover .fn-popup {
        // display: block;
        opacity: 1;
        visibility: visible;
        transition: visible 0s, opacity var(--show);
        // transition-delay: 0.1s;
        transition-timing-function: ease-in;
    }
}

// Popup â€” For smaller touch-based devices.
// The popup appears along the bottom of the screen, and a
// dark overlay covers the rest of the content.

// TODO: What about Windows devices with both tap and touch?
// They won'  be able to tap. May want to instead use
// `@media (pointer:fine)` and `@media (pointer:coarse)`?

@media (hover: none) and (max-width: 599px) {
    .fn-popup {
        position: fixed;
        // Make popup width of screen
        left: 0;
        right: 0;
        z-index: 100;
        // border-radius: grid(0.25) grid(0.5) 0 0;
        font-size: 1.333rem !important;
        line-height: 2rem !important;
        padding: 2rem 2rem 2.5rem !important;
        margin: 0 1rem;
        // line-height: grid(0.75);
        box-shadow: 0px 0px 40px 10px rgba(0, 0, 0, 0.2) !important;
        border-radius: var(--media-border-radius) var(--media-border-radius) 0 0;

        // Transition settings to hidden state.
        // Don't set visibility until opacity tween is complete.
        bottom: -10em;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0.15s, opacity 0.15s, bottom 0.25s;
        transition-timing-function: ease-in;
    }

    // Activated
    // .fn:hover .fn-popup,
    .fn:focus-within a[aria-expanded='true'] + .fn-popup {
        // Transition settings to visible state.
        // Set visibility immediately (0s).
        bottom: -0.5em;
        visibility: visible;
        opacity: 1;
        transition: visibility 0s, opacity 0.25s, bottom 0.25s;
        transition-timing-function: ease-out;
    }

    // Overlay
    // .note .popup::after {
    //     content: '';
    //     position: fixed;
    //     top: 0;
    //     left: 0;
    //     bottom: 0;
    //     right: 0;
    //     background-color: rgba(0, 0, 0, 0.5);
    //     z-index: -1;
    // }
}

/* 
========================================================
FOOTNOTES: SECTION AT END
========================================================
*/

#footnotes {
    @include topBorder(sectionDivider(0.8));
    padding-top: 4rem;
    // margin-top: 4rem;
}

#footnotes h2 {
    --color: var(--body-text);
    // Settings are inherited by parent `post.scss` or `portfolio.scss`
    &::before {
        // Disable ## prefix for footnotes header
        content: initial !important;
    }
}

#footnotes ol {

    margin-bottom: 0rem;
    list-style: none;
    padding-left: 0;
    margin: 0;
    overflow: visible;

    display: grid;
    grid-auto-flow: row;
    row-gap: 2rem;

    // One column by default
    // Two columns on `small` screens
    // Three columns on `medium` and above screens
    @include small-screen {
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem;
    }

    @include medium-screen {
        grid-template-columns: repeat(3, 1fr);
        column-gap: 2rem;
    }

    @include large-screen {
        grid-template-columns: repeat(4, 1fr);
        column-gap: 2rem;
    }
}

#footnotes ol li {

    --color: var(--body-text);
    @include font-small;
      @include links;

    list-style: none;
    position: relative;
    counter-increment: custom-counter;
    margin-left: 2rem;
    margin-bottom: 0;

    // Normal small-text is 500 weight on smaller
    // screen sizes, but we want notes to be lighter.
    // font-weight: 400 !important;

    // Prevent contents breaking across columns. */
    // break-inside: avoid;
    // page-break-inside: avoid; /* Firefox */
    // color: onBackground(0.65);

    // Numeric marker
    &::before {
        content: counter(custom-counter) '.';
        color: var(--color);
        filter: brightness(var(--brightness-shift));
        position: absolute;
        font-weight: 600;
        @include medium-screen {
            font-weight: 500;
        }
        left: -0.5rem;
        transform: translateX(-100%);
        font-size: 0.9em;
    }

    // No margin on last one
    &:last-of-type {
        margin-bottom: 0;
    }

    // Highlight targeted note with a brief flash of
    // background color.
    &:target {
        animation: fadeIn ease-in 2s;
        border-radius: 0.1em;
    }

    @keyframes fadeIn {
        0% {
            color: foreground(0.95);
            background-color: foreground(0.1);
            box-shadow: -0.1em 0 0 0.4em fore(0.1);
        }
        100% {
            color: foreground(0.6);
            background-color: transparent;
            box-shadow: -0.1em 0 0 0em transparent;
        }
    }

    // Reveal back button when user hovers the list item.
    .fn-back {
        text-decoration: none;
        font-size: 0.9em;
        line-height: 1em;
        margin-left: 0.2em;
        transition: opacity 200ms;
        color: onBackground(0.5);
        opacity: 1;    
    }

    @include small-screen {
        .fn-back {
            opacity: 0;
        }
        
        &:hover .fn-back {
            opacity: 1;
        }
    }
}
