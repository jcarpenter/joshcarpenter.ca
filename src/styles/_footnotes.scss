@use "mixins-and-functions" as *;


/* 
========================================================
FOOTNOTES: LINKS INSIDE CONTENT
========================================================
*/

/* -------------- Wrapping <sup> -------------- */

sup.fn {
    position: relative;
    vertical-align: baseline;
    font-size: 1em;
    top: initial;
    bottom: 0.1em;
}


/* -------------- Link -------------- */

.fn > a {    
    font-size: 0.8em;
    color: onBackground(calc(var(--baseTextAlpha) - 0.2));
    background: none;
    text-decoration: underline;
    text-decoration-color: inherit;
    text-underline-offset: 0.1em;
    padding: 0;
    // Push vertical alignment up a few px.
    // Code text is bit smaller than surrounding,
    // So we need to vertically center it.
    line-height: 0;
    vertical-align: 0.1em;
    border-radius: 0.03rem;
}

// Touch: Make target slightly larger
@media (hover: none) {
    .fn > a {
        // padding: 0em 0.1em;
        // padding: 0.3em 0.35em 0.2em;
    }
}

// Desktop: Make target slightly smaller
@media (hover) {
    .fn > a {
        padding: 0;
        // padding: 0.3em 0.25em 0.2em;
    }
}

// Links inside the footnote
.fn > a:focus {
    @include outline-thin;
    outline-offset: 0.2rem;
}

.fn > a:focus,
.fn > a:hover {
    color: onBackground(1);
    // background-color: onBackground(0.2);
}




/* -------------- Inside .large-text -------------- */

.large-text sup.fn > a {
    color: inherit;
    opacity: 0.8;
    vertical-align: 0.4em;
    text-decoration: none;
}

/* -------------- Inside blockquotes -------------- */

// Counteract any blockquote italics styling
blockquote .fn > a {
    font-style: normal;
    color: inherit;
    // background-color: accent(0.075);
    &:focus, &:hover {
        color: inherit;
    // background-color: accent(0.2);
    }
}

blockquote .fn-popup {
    font-style: normal;
}


/* 
========================================================
FOOTNOTES: POPUP OVER LINK
========================================================
*/

.fn-popup {
    @include baselineShiftTypography(
        $fontSize: 1.2rem,
        $lineHeight: 1.8rem,
    );
    margin-bottom: 0rem;
    white-space: normal;
    padding: 1rem;
    color: onPopup(0.7);
    background-color: popup();
    a { 
        color: onPopup(0.9) !important; 
        text-decoration-color: onPopup(0.5) !important;
    }
    a:hover { 
        color: onPopup() !important;
        text-decoration-color: onPopup() !important;
    }  
}

// Popup: Desktop and larger touch-based devices
// Appears as a hovering box 
@media (hover), (hover: none) and (min-width: 600px) {
    .fn {
        --notch-size: 1rem;
        --popup-distance: -0.75rem;
        --show: 0.05s;
        --hide: 0.05s;
        --delay: 0.1s;
    }

    .fn-popup {
        position: absolute;
        left: 50%;
        z-index: 100;
        width: 24rem;
        visibility: hidden;
        opacity: 0;
        transition: visibility var(--hide), opacity var(--hide);
        transition-delay: var(--delay);
        transition-timing-function: ease-out;
        /* Notch */
        &::before {
            content: "";
            width: var(--notch-size);
            height: var(--notch-size);
            position: absolute;
            transform: rotate(45deg);
            z-index: -1;
            background-color: inherit;
        }
    }

    .fn-popup.above {
        transform: translate(-50%, -100%);
        // Offset by size of notch, then adjust distance with final value
        top: var(--popup-distance);
        /* Notch */
        &::before {
            bottom: 0.05em;
            left: 50%;
            transform: translate(-50%, 50%) rotate(45deg);
        }
    }

    .fn-popup.below {
        transform: translate(-50%, 100%);
        bottom: -0.5em;
        /* Notch */
        &::before {
            top: 0.05em;
            left: 50%;
            transform: translate(-50%, -50%) rotate(45deg);
        }
    }

    .fn:focus-within a[aria-expanded="true"] + .fn-popup,
    .fn:hover .fn-popup {
        // display: block;
        opacity: 1;
        visibility: visible;
        transition: visible 0s, opacity var(--show);
        // transition-delay: 0.1s;
        transition-timing-function: ease-in;
    }
}

// Popup â€” For smaller touch-based devices.
// The popup appears along the bottom of the screen, and a 
// dark overlay covers the rest of the content.

// TODO: What about Windows devices with both tap and touch? 
// They won'  be able to tap. May want to instead use 
// `@media (pointer:fine)` and `@media (pointer:coarse)`?

@media (hover: none) and (max-width: 599px) {
    .fn-popup {
        position: fixed;
        // Make popup width of screen
        left: 0;
        right: 0;
        z-index: 100;
        // border-radius: grid(0.25) grid(0.5) 0 0;
        padding: 1.5rem;
        padding-bottom: 2.5rem;
        font-size: 1.33rem;
        margin-left: 0.5rem;
        margin-right: 0.5rem;
        // line-height: grid(0.75);
        line-height: 2rem;
        box-shadow: 0px 1px 40px 14px rgba(0, 0, 0, 0.2);

        // Transition settings to hidden state.
        // Don't set visibility until opacity tween is complete.
        bottom: -10em;
        visibility: hidden;
        opacity: 0;
        transition: visibility 0.15s, opacity 0.15s, bottom 0.25s;
        transition-timing-function: ease-in;
    }

    // Activated
    // .fn:hover .fn-popup,
    .fn:focus-within a[aria-expanded="true"] + .fn-popup {
        // Transition settings to visible state.
        // Set visibility immediately (0s).
        bottom: -0.5em;
        visibility: visible;
        opacity: 1;
        transition: visibility 0s, opacity 0.25s, bottom 0.25s;
        transition-timing-function: ease-out;
    }

    // Overlay 
    // .note .popup::after {
    //     content: '';
    //     position: fixed;
    //     top: 0;
    //     left: 0;
    //     bottom: 0;
    //     right: 0;
    //     background-color: rgba(0, 0, 0, 0.5);
    //     z-index: -1;
    // }
}


/* 
========================================================
FOOTNOTES: SECTION AT END
========================================================
*/

#footnotes {
    @include topBorder(horizontalRule(0.8));    
    // margin-top: 4rem;
}

#footnotes h2 {
    color: onBackground(1);
    &::before {
        // Disable ## prefix for footnotes header
        content: initial !important; 
    }
}
  
#footnotes ol {
    
    margin-bottom: 0rem;
    list-style: none;
    padding-left: 0;
    margin: 0;
    overflow: visible;
    
    display: grid;
    grid-auto-flow: row;
    row-gap: 1rem;
 
    // One column by default
    // Two columns on `small` screens
    // Three columns on `medium` and above screens
    @include small-screen {
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem;
        row-gap: 2rem;
    }
    
    @include medium-screen {
        grid-template-columns: repeat(3, 1fr);
        column-gap: 2rem;
    }

    @include large-screen {
        grid-template-columns: repeat(4, 1fr);
        column-gap: 2rem;
    }
}

#footnotes ol li {
    
    list-style: none;
    position: relative;
    counter-increment: custom-counter;

    margin-left: 2rem;
    margin-bottom: 0;
    
    // Prevent contents breaking across columns. */
    // break-inside: avoid;
    // page-break-inside: avoid; /* Firefox */
    // color: onBackground(0.65);

    // max-width: min(30rem, 50%);

    // Numeric marker
    &::before {
        content: counter(custom-counter) '.';
        position: absolute;
        font-weight: 500;
        left: -0.5rem;
        transform: translateX(-100%);
        font-size: 0.9em;
        color: caption(1);
    }

    // No margin on last one
    &:last-of-type {
        margin-bottom: 0;
    }

    a {
        font-weight: normal;
        text-decoration: underline;
        border: none;
        color: onBackground(0.85);

        &:hover {
            border: none;
            color: onBackground(0.95); 
        }
    }

    // Highlight targeted note with a brief flash of
    // background color.
    &:target {
        animation: fadeIn ease-in 2s;
        border-radius: 0.1em;
    }

    @keyframes fadeIn {
        0% {
            color: foreground(0.95);
            background-color: foreground(0.1);
            box-shadow: -0.1em 0 0 0.4em fore(0.1);
        }
        100% {
            color: foreground(0.6);
            background-color: transparent;
            box-shadow: -0.1em 0 0 0em transparent;
        }
    }

    // Reveal back button when user hovers the list item.
    .fn-back {
        text-decoration: none;
        font-size: 0.9em;
        line-height: 1em;
        margin-left: 0.2em;
        opacity: 0;
        transition: opacity 200ms;
        color: onBackground(0.5);
    }
    
    &:hover .fn-back {
        opacity: 1;
    }
}