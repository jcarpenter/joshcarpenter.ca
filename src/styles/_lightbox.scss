@use "mixins_and_functions" as *;


/* 
========================================================
Lightbox
========================================================
*/

/* -------------- Thumbnail -------------- */

[data-lightbox] > button {
    border: none;
    margin: 0;
    padding: 0;
    cursor: pointer;
    font-size: 0;
    aspect-ratio: auto;
    display: inline-grid; // Putting this on button and on parent figure eliminates pesky extra margin below child image.

    &:focus {
        @include outline-thin
    }
}

/* -------------- Transition -------------- */

/* 
We're just defining visibility transition delays here. `visibility:hidden` is set by a top-level `[aria-hidden="true"]` selector. When aria-hidden=true, we delay visibility long enough for opacity tweens to finish.
*/
#lightbox[aria-hidden="true"] {
    transition: visibility 0.5s;
}

/* When aria-hidden != true, we flip visibility immediately, so opacity tweens can start. */
#lightbox {
    transition: visibility 0s;
}

/* -------------- Media & Captions -------------- */

#lightbox {
    .item {
        align-items: center;
        bottom: 0;
        display: flex;
        flex-direction: column;
        justify-content: center;
        left: 0;
        opacity: 0;
        padding: grid(2) grid(0.5) grid(1);
        pointer-events: none;
        position: fixed;
        right: 0;
        top: 0;
        transition-timing-function: ease-out;
        transition: opacity 0.1s;
        z-index: 1;
    }

    .item.open {
        opacity: 1;
        transition-timing-function: ease-in;
    }

    .media {
        align-items: center;
        display: flex;
        flex-direction: column;
        flex: 1 1 auto;
        justify-content: center;
        overflow: hidden;
        position: relative;

        img {
            pointer-events: all;
            z-index: 1;
            max-width: 100%;
            height: auto;
        }
    }

    .caption {
        pointer-events: all;
        color: foreground(0.3);
        flex: 0 1 auto;
        margin-top: grid(1);
        max-width: 64em;
        z-index: 1;
    }

    // Tweaked version of note styles
    .fn button {
        background-color: foreground(0.7);
        color: foreground(0.3);
    }

    .fn:hover button {
        background-color: foreground(0.5);
    }
}

/* -------------- Controls -------------- */

#lightbox > button {
    background-color: transparent;
    cursor: pointer;
    margin: 0;
    opacity: 0.4;
    pointer-events: initial;
    position: fixed;
    z-index: 1;

    &:hover {
        opacity: 1;
    }

    &[aria-disabled="true"] {
        opacity: 0.15;
        pointer-events: none;
    }

    img {
        width: grid(1);
        height: auto;
    }
}

#lightbox {
    #prev,
    #next,
    #close {
        top: grid(0.5);
    }

    #close {
        left: grid(0.5);
    }

    #prev {
        right: grid(1.5);
    }

    #next {
        right: grid(0.5);
        transform: rotateZ(180deg);
    }

    // #leftSideOfImage {
    //     position: absolute;
    //     top: 0;
    //     left: 0;
    //     width: 25%;
    //     height: 100%;
    //     background-color: rgba(255, 0, 0, 0.5);
    //     z-index: 2;
    // }
}

/* -------------- Background -------------- */

#lightbox[aria-hidden="true"] #background {
    opacity: 0;
    transition: opacity 0.2s ease-in;
}

#lightbox #background {
    background-color: rgba(20, 20, 20, 0.92);
    bottom: 0;
    cursor: default;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 0;
    opacity: 1;
    transition: opacity 0.2s ease-out;
}
